!function r(e,t,n){function o(a,s){if(!t[a]){if(!e[a]){var u="function"==typeof require&&require;if(!s&&u)return u(a,!0);if(i)return i(a,!0);var f=new Error("Cannot find module '"+a+"'");throw f.code="MODULE_NOT_FOUND",f}var c=t[a]={exports:{}};e[a][0].call(c.exports,function(r){var t=e[a][1][r];return o(t||r)},c,c.exports,r,e,t,n)}return t[a].exports}for(var i="function"==typeof require&&require,a=0;a<n.length;a++)o(n[a]);return o}({1:[function(r,e,t){"use strict";function n(r){var e=[1/0,1/0,-1/0,-1/0];return o.coordEach(r,function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])}),e}var o=r("@turf/meta");e.exports=n,e.exports.default=n},{"@turf/meta":3}],2:[function(r,e,t){"use strict";function n(r,e,t){if(t=t||{},!m(t))throw new Error("options is invalid");var n=t.bbox,o=t.id;if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");n&&g(n),o&&y(o);var i={type:"Feature"};return o&&(i.id=o),n&&(i.bbox=n),i.properties=e||{},i.geometry=r,i}function o(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!w(r[0])||!w(r[1]))throw new Error("coordinates must contain numbers");return n({type:"Point",coordinates:r},e,t)}function i(r,e,t){if(!r)throw new Error("coordinates is required");for(var o=0;o<r.length;o++){var i=r[o];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<i[i.length-1].length;a++){if(0===o&&0===a&&!w(i[0][0])||!w(i[0][1]))throw new Error("coordinates must contain numbers");if(i[i.length-1][a]!==i[0][a])throw new Error("First and last Position are not equivalent.")}}return n({type:"Polygon",coordinates:r},e,t)}function a(r,e,t){if(!r)throw new Error("coordinates is required");if(r.length<2)throw new Error("coordinates must be an array of two or more positions");if(!w(r[0][1])||!w(r[0][1]))throw new Error("coordinates must contain numbers");return n({type:"LineString",coordinates:r},e,t)}function s(r,e){if(e=e||{},!m(e))throw new Error("options is invalid");var t=e.bbox,n=e.id;if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");t&&g(t),n&&y(n);var o={type:"FeatureCollection"};return n&&(o.id=n),t&&(o.bbox=t),o.features=r,o}function u(r,e,t){if(!r)throw new Error("coordinates is required");return n({type:"MultiLineString",coordinates:r},e,t)}function f(r,e,t){if(!r)throw new Error("coordinates is required");return n({type:"MultiPoint",coordinates:r},e,t)}function c(r,e,t){if(!r)throw new Error("coordinates is required");return n({type:"MultiPolygon",coordinates:r},e,t)}function l(r,e){if(void 0===r||null===r)throw new Error("radians is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var t=v[e||"kilometers"];if(!t)throw new Error(e+" units is invalid");return r*t}function d(r,e){if(void 0===r||null===r)throw new Error("distance is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var t=v[e||"kilometers"];if(!t)throw new Error(e+" units is invalid");return r/t}function h(r){if(null===r||void 0===r)throw new Error("radians is required");return 180*(r%(2*Math.PI))/Math.PI}function w(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}function m(r){return!!r&&r.constructor===Object}function g(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(4!==r.length&&6!==r.length)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach(function(r){if(!w(r))throw new Error("bbox must only contain numbers")})}function y(r){if(!r)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof r))throw new Error("id must be a number or a string")}Object.defineProperty(t,"__esModule",{value:!0});var b=6371008.8,v={meters:b,metres:b,millimeters:1e3*b,millimetres:1e3*b,centimeters:100*b,centimetres:100*b,kilometers:b/1e3,kilometres:b/1e3,miles:b/1609.344,nauticalmiles:b/1852,inches:39.37*b,yards:b/1.0936,feet:3.28084*b,radians:1,degrees:b/111325},p={meters:1,metres:1,millimeters:1e3,millimetres:1e3,centimeters:100,centimetres:100,kilometers:.001,kilometres:.001,miles:1/1609.344,nauticalmiles:1/1852,inches:39.37,yards:1/1.0936,feet:3.28084,radians:1/b,degrees:1/111325},E={meters:1,metres:1,millimeters:1e6,millimetres:1e6,centimeters:1e4,centimetres:1e4,kilometers:1e-6,kilometres:1e-6,acres:247105e-9,miles:3.86e-7,yards:1.195990046,feet:10.763910417,inches:1550.003100006};t.earthRadius=b,t.factors=v,t.unitsFactors=p,t.areaFactors=E,t.feature=n,t.geometry=function(r,e,t){if(t=t||{},!m(t))throw new Error("options is invalid");var n=t.bbox;if(!r)throw new Error("type is required");if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");n&&g(n);var s;switch(r){case"Point":s=o(e).geometry;break;case"LineString":s=a(e).geometry;break;case"Polygon":s=i(e).geometry;break;case"MultiPoint":s=f(e).geometry;break;case"MultiLineString":s=u(e).geometry;break;case"MultiPolygon":s=c(e).geometry;break;default:throw new Error(r+" is invalid")}return n&&(s.bbox=n),s},t.point=o,t.points=function(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");return s(r.map(function(r){return o(r,e)}),t)},t.polygon=i,t.polygons=function(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");return s(r.map(function(r){return i(r,e)}),t)},t.lineString=a,t.lineStrings=function(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");return s(r.map(function(r){return a(r,e)}),t)},t.featureCollection=s,t.multiLineString=u,t.multiPoint=f,t.multiPolygon=c,t.geometryCollection=function(r,e,t){if(!r)throw new Error("geometries is required");if(!Array.isArray(r))throw new Error("geometries must be an Array");return n({type:"GeometryCollection",geometries:r},e,t)},t.round=function(r,e){if(void 0===r||null===r||isNaN(r))throw new Error("num is required");if(e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t},t.radiansToLength=l,t.lengthToRadians=d,t.lengthToDegrees=function(r,e){return h(d(r,e))},t.bearingToAzimuth=function(r){if(null===r||void 0===r)throw new Error("bearing is required");var e=r%360;return e<0&&(e+=360),e},t.radiansToDegrees=h,t.degreesToRadians=function(r){if(null===r||void 0===r)throw new Error("degrees is required");return r%360*Math.PI/180},t.convertLength=function(r,e,t){if(null===r||void 0===r)throw new Error("length is required");if(!(r>=0))throw new Error("length must be a positive number");return l(d(r,e),t||"kilometers")},t.convertArea=function(r,e,t){if(null===r||void 0===r)throw new Error("area is required");if(!(r>=0))throw new Error("area must be a positive number");var n=E[e||"meters"];if(!n)throw new Error("invalid original units");var o=E[t||"kilometers"];if(!o)throw new Error("invalid final units");return r/n*o},t.isNumber=w,t.isObject=m,t.validateBBox=g,t.validateId=y,t.radians2degrees=function(){throw new Error("method has been renamed to `radiansToDegrees`")},t.degrees2radians=function(){throw new Error("method has been renamed to `degreesToRadians`")},t.distanceToDegrees=function(){throw new Error("method has been renamed to `lengthToDegrees`")},t.distanceToRadians=function(){throw new Error("method has been renamed to `lengthToRadians`")},t.radiansToDistance=function(){throw new Error("method has been renamed to `radiansToLength`")},t.bearingToAngle=function(){throw new Error("method has been renamed to `bearingToAzimuth`")},t.convertDistance=function(){throw new Error("method has been renamed to `convertLength`")}},{}],3:[function(r,e,t){"use strict";function n(r,e,t){if(null!==r)for(var o,i,a,s,u,f,c,l,d=0,h=0,w=r.type,m="FeatureCollection"===w,g="Feature"===w,y=m?r.features.length:1,b=0;b<y;b++){u=(l=!!(c=m?r.features[b].geometry:g?r.geometry:r)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var v=0;v<u;v++){var p=0,E=0;if(null!==(s=l?c.geometries[v]:c)){f=s.coordinates;var P=s.type;switch(d=!t||"Polygon"!==P&&"MultiPolygon"!==P?0:1,P){case null:break;case"Point":e(f,h,b,p,E),h++,p++;break;case"LineString":case"MultiPoint":for(o=0;o<f.length;o++)e(f[o],h,b,p,E),h++,"MultiPoint"===P&&p++;"LineString"===P&&p++;break;case"Polygon":case"MultiLineString":for(o=0;o<f.length;o++){for(i=0;i<f[o].length-d;i++)e(f[o][i],h,b,p,E),h++;"MultiLineString"===P&&p++,"Polygon"===P&&E++}"Polygon"===P&&p++;break;case"MultiPolygon":for(o=0;o<f.length;o++){for("MultiPolygon"===P&&(E=0),i=0;i<f[o].length;i++){for(a=0;a<f[o][i].length-d;a++)e(f[o][i][a],h,b,p,E),h++;E++}p++}break;case"GeometryCollection":for(o=0;o<s.geometries.length;o++)n(s.geometries[o],e,t);break;default:throw new Error("Unknown Geometry Type")}}}}}function o(r,e,t,o){var i=t;return n(r,function(r,n,o,a,s){i=0===n&&void 0===t?r:e(i,r,n,o,a,s)},o),i}function i(r,e){var t;switch(r.type){case"FeatureCollection":for(t=0;t<r.features.length;t++)e(r.features[t].properties,t);break;case"Feature":e(r.properties,0)}}function a(r,e){if("Feature"===r.type)e(r,0);else if("FeatureCollection"===r.type)for(var t=0;t<r.features.length;t++)e(r.features[t],t)}function s(r,e){var t,n,o,i,a,s,u,f,c,l,d=0,h="FeatureCollection"===r.type,w="Feature"===r.type,m=h?r.features.length:1;for(t=0;t<m;t++){for(s=h?r.features[t].geometry:w?r.geometry:r,f=h?r.features[t].properties:w?r.properties:{},c=h?r.features[t].bbox:w?r.bbox:void 0,l=h?r.features[t].id:w?r.id:void 0,a=(u=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=u?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":e(i,d,f,c,l);break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)e(i.geometries[n],d,f,c,l);break;default:throw new Error("Unknown Geometry Type")}else e(null,d,f,c,l);d++}}function u(r,e){s(r,function(r,t,n,o,i){var a=null===r?null:r.type;switch(a){case null:case"Point":case"LineString":case"Polygon":return void e(l.feature(r,n,{bbox:o,id:i}),t,0)}var s;switch(a){case"MultiPoint":s="Point";break;case"MultiLineString":s="LineString";break;case"MultiPolygon":s="Polygon"}r.coordinates.forEach(function(r,o){var i={type:s,coordinates:r};e(l.feature(i,n),t,o)})})}function f(r,e){u(r,function(r,t,n){var i=0;if(r.geometry){var a=r.geometry.type;"Point"!==a&&"MultiPoint"!==a&&o(r,function(o,a,s,u,f,c){var d=l.lineString([o,a],r.properties);return e(d,t,n,c,i),i++,a})}})}function c(r,e){if(!r)throw new Error("geojson is required");u(r,function(r,t,n){if(null!==r.geometry){var o=r.geometry.type,i=r.geometry.coordinates;switch(o){case"LineString":e(r,t,n,0,0);break;case"Polygon":for(var a=0;a<i.length;a++)e(l.lineString(i[a],r.properties),t,n,a)}}})}Object.defineProperty(t,"__esModule",{value:!0});var l=r("@turf/helpers");t.coordEach=n,t.coordReduce=o,t.propEach=i,t.propReduce=function(r,e,t){var n=t;return i(r,function(r,o){n=0===o&&void 0===t?r:e(n,r,o)}),n},t.featureEach=a,t.featureReduce=function(r,e,t){var n=t;return a(r,function(r,o){n=0===o&&void 0===t?r:e(n,r,o)}),n},t.coordAll=function(r){var e=[];return n(r,function(r){e.push(r)}),e},t.geomEach=s,t.geomReduce=function(r,e,t){var n=t;return s(r,function(r,o,i,a,s){n=0===o&&void 0===t?r:e(n,r,o,i,a,s)}),n},t.flattenEach=u,t.flattenReduce=function(r,e,t){var n=t;return u(r,function(r,o,i){n=0===o&&0===i&&void 0===t?r:e(n,r,o,i)}),n},t.segmentEach=f,t.segmentReduce=function(r,e,t){var n=t,o=!1;return f(r,function(r,i,a,s,u){n=!1===o&&void 0===t?r:e(n,r,i,a,s,u),o=!0}),n},t.lineEach=c,t.lineReduce=function(r,e,t){var n=t;return c(r,function(r,o,i,a){n=0===o&&void 0===t?r:e(n,r,o,i,a)}),n}},{"@turf/helpers":2}],4:[function(r,e,t){(function(e){var t={helpers:r("@turf/helpers"),bbox:r("@turf/bbox"),meta:r("@turf/meta")};e.window.turf=t}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"@turf/bbox":1,"@turf/helpers":2,"@turf/meta":3}]},{},[4]);
